$btn-border-radius: 4px;

.btn {
    align-self: flex-start;
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid transparent;
    border-radius: $btn-border-radius;
    font-size: var(--spacing-4);
    line-height: var(--spacing-5);
    padding: var(--spacing-2) var(--spacing-4);
    transition: all 0.3s ease-in-out;
    cursor: pointer;
    font-weight: 700;
    gap: var(--spacing-2);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); /* Subtle shadow */

    &.icon {
        padding: var(--spacing-2);

        &.round { border-radius: 50% }
    }

    background-color: var(--primary-color);
    color: var(--white);

    svg { color: var(--white) }

    &.lg {
        font-size: var(--spacing-5);
        line-height: var(--spacing-6);
        padding: var(--spacing-3) var(--spacing-5);

        svg {
            width: var(--spacing-6);
            height: var(--spacing-6);
        }

        &.icon {
            padding: var(--spacing-3);
        }
    }

    &.sm {
        font-size: var(--spacing-3);
        line-height: var(--spacing-4);
        padding: var(--spacing-1) var(--spacing-2);

        svg {
            width: var(--spacing-4);
            height: var(--spacing-4);
        }

        &.icon {
            padding: var(--spacing-2);
        }
        .spinner {
            .loader {
                width: 10px !important;
                height: 10px !important;
            }
        }
    }

    &:hover {
        background-color: var(--black);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2); /* Enhance shadow on hover */
    }

    &.secondary {
        background-color: transparent;
        border: 1px solid var(--border);
        color: var(--primary-color);

        svg { color: var(--primary-color) }

        &:hover:not(:disabled),
        &:hover:not(.disabled) {
            background-color: var(--black);
            color: var(--white);

            svg { color: var(--white) }

            .spinner {
                .loader {
                    border-color: var(--primary-color) !important;
                    border-top-color: transparent !important;
                }
            }
        }

        .spinner {
            .loader {
                border-color: var(--primary-color) !important;
                border-top-color: transparent !important;
            }
        }
    }
    &.static {
        pointer-events: none;
    }

    &.link {
        background-color: transparent;
        color: var(--primary-color);

        svg { color: var(--primary-color) }

        &.disabled,
        &:disabled {
            svg { color: var(--gray-light) }
        }

        &:hover:not(:disabled),
        &:hover:not(.disabled)  {
            color: var(--black);

            svg { color: var(--black) }
        }
    }

    @each $colorVar in (success, warning, error, gray, black) {
        &.#{"" + $colorVar} {
            color: var(--#{$colorVar});

            svg { color: var(--#{$colorVar}) }

            &.disabled,
            &:disabled {
                svg { color: var(--gray-light) }
            }

            .spinner {
                .loader {
                    border: 3px solid var(--#{$colorVar}) !important;
                    border-top: 3px solid transparent !important;
                }
            }
        }
    }

    .spinner {
        .loader {
            border: 3px solid var(--white) !important;
            width: 14px !important;
            height: 14px !important;
            border-top: 3px solid transparent !important;
        }
    }
    &.disabled,
    &:disabled {
        background-color: var(--background-panel);
        cursor: not-allowed;
        pointer-events: none;
    }

}

.btn-group {
    display: flex;

    .btn {
        border-color: transparent;
        flex: 1;

        &:not(.link) {
            border-radius: 0;
            border-right-color: var(--border);

            &:first-child {
                border-top-left-radius: $btn-border-radius;
                border-bottom-left-radius: $btn-border-radius;
            }

            &:last-child {
                border-right-color: transparent;
                border-top-right-radius: $btn-border-radius;
                border-bottom-right-radius: $btn-border-radius;
            }

            &.secondary {
                border-top-color: var(--border);
                border-bottom-color: var(--border);

                &:first-child {
                    border-left-color: var(--border);
                }

                &:last-child {
                    border-right-color: var(--border);
                }
            }
        }
    }
}
